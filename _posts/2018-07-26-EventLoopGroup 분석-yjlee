## 0. 실행 순서
   NettyServer -> NioEventLoopGroup -> MultiThreadEventLoopGroup -> MultithreadEventExecutorGroup -> NioEventLoopGroup
  -> NioEventLoop -> WindowSelectorProvider -> WindowSelectorImpl  --> 생략 --> ServerSocketChannelImpl(bind)
                       --> 생략 --> NioEventLoop( openSelector) --> WindowSelectorImpl  --> --> ServerSocketChannelImpl(accept
                       
                    
  MultithreadEventExecutorGroup -> MultithreadEventExecutorGroup(int nThreads, Executor executor, EventExecutorChooserFactory chooserFactory, Object... args)
       --> public DefaultThreadFactory(Class<?> poolType)
       
       
 ###1. 이벤트 루프 그룹
   (EventLoopGroup )

   특별한 EventExecutorGroup 은 이벤트 루프동안 마지막 selection을 처리하는것을 얻는 채널 등록을 허용합니다.
  
   1) EventLoop next
   2) ChannelFuture registoer(Channel channel)
      이 EventLoop에 채널을 등록하십시오. 등록이 완료되면 반환 된 ChannelFuture에 알림이 전송됩니다.
   3) ChannelFuture register(ChannelPromise promise)
      ChannelFuture를 사용하여이 EventLoop에 채널을 등록하십시오. 전달 된 ChannelFuture는 등록이 완료되면 알림을 받게되며 반환됩니다
       
       
 ### 2. EventExecutorGroup

        EventExecutorGroup은 EventExecutor가 제공하는 것을 제공합니다.
        next () 메소드를 통해. 이 외에도, 그들은 또한 그들의 처리에 대한 책임이있다.
 생명주기를 유지하고 글로벌 방식으로 차단할 수 있습니다
 
 
 ### 3.EventExecutor

EventExecutor는 특별한 EventExecutorGroup입니다.
스레드가 이벤트 루프에서 실행되는지 확인하는 편리한 메소드가 있습니다.
이 외에도 EventExecutorGroup을 확장하여 메서드에 접근하는 제네릭 방법을 허용합니다

### 3. ScheduledExecutorService


1) 예제 :
ScheduledExecutorService service = Executors
 .newSingleThreadScheduledExecutor();
 service.scheduleAtFixedRate(runnable, 0, 1, TimeUnit.SECONDS);
 
 
### Future 사용법
ExecutorService executor = Executors.newFixedThreadPool(1);
 

        EventExecutorGroup은 EventExecutor가 제공하는 것을 제공합니다.

        next () 메소드를 통해. 이 외에도, 그들은 또한 그들의 처리에 대한 책임이있다.

 생명주기를 유지하고 글로벌 방식으로 차단할 수 있습니다

 

 

 ### 3.EventExecutor



EventExecutor는 특별한 EventExecutorGroup입니다.

스레드가 이벤트 루프에서 실행되는지 확인하는 편리한 메소드가 있습니다.

이 외에도 EventExecutorGroup을 확장하여 메서드에 접근하는 제네릭 방법을 허용합니다



### 3. ScheduledExecutorService





1) 예제 :

ScheduledExecutorService service = Executors

 .newSingleThreadScheduledExecutor();

 service.scheduleAtFixedRate(runnable, 0, 1, TimeUnit.SECONDS);

 

 

 

 

 ### 3.EventExecutor



EventExecutor는 특별한 EventExecutorGroup입니다.

스레드가 이벤트 루프에서 실행되는지 확인하는 편리한 메소드가 있습니다.

이 외에도 EventExecutorGroup을 확장하여 메서드에 접근하는 제네릭 방법을 허용합니다



### 3. ScheduledExecutorService

1) 예제 :

ScheduledExecutorService service = Executors

 .newSingleThreadScheduledExecutor();

 service.scheduleAtFixedRate(runnable, 0, 1, TimeUnit.SECONDS);

 

 
#### main 
